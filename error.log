{"level":"error","message":"An error ocurrred on deleteProduct mutation: Product does not exists"}
{"level":"error","message":"An error ocurrred on deleteProduct mutation: Product does not exists"}
{"level":"error","message":"An error ocurrred on register mutation: Cannot read properties of undefined (reading 'cartLine_id')"}
{"level":"error","message":"An error ocurrred on register mutation: \nInvalid `this.client.cartline.create()` invocation in\nC:\\Users\\Daniel\\Documents\\tareas tec\\noveno\\ingWeb\\proyecto\\testProyect2\\src\\infrastructure\\repositories\\ShoppingCartRepository.ts:43:61\n\n  40 const databaseSaleLines = await Promise.all(\n  41   selectedBatches.map(async (batch) => {\n  42     const [lastCartLine] = await this.client.cartline.findMany({where: {shoppingCart_id: cart.snapshot.id as number}, orderBy: {cartLine_id: 'desc'}, take: 1});\n→ 43     const databaseSaleLine = await this.client.cartline.create(\nUnique constraint failed on the constraint: `PRIMARY`"}
{"level":"error","message":"An error ocurrred on register mutation: \nInvalid `this.client.cartline.create()` invocation in\nC:\\Users\\Daniel\\Documents\\tareas tec\\noveno\\ingWeb\\proyecto\\testProyect2\\src\\infrastructure\\repositories\\ShoppingCartRepository.ts:44:61\n\n  41 selectedBatches.map(async (batch) => {\n  42   const [lastCartLine] = await this.client.cartline.findMany({where: {shoppingCart_id: cart.snapshot.id as number}, orderBy: {cartLine_id: 'desc'}, take: 1});\n  43   console.log('lastCartLine => ', lastCartLine);\n→ 44   const databaseSaleLine = await this.client.cartline.create(\nUnique constraint failed on the constraint: `PRIMARY`"}
{"level":"error","message":"An error ocurrred on register mutation: \nInvalid `this.client.cartline.create()` invocation in\nC:\\Users\\Daniel\\Documents\\tareas tec\\noveno\\ingWeb\\proyecto\\testProyect2\\src\\infrastructure\\repositories\\ShoppingCartRepository.ts:44:61\n\n  41 selectedBatches.map(async (batch) => {\n  42   const [lastCartLine] = await this.client.cartline.findMany({where: {shoppingCart_id: cart.snapshot.id as number}, orderBy: {cartLine_id: 'desc'}, take: 1});\n  43   console.log('lastCartLine => ', lastCartLine);\n→ 44   const databaseSaleLine = await this.client.cartline.create(\nUnique constraint failed on the constraint: `PRIMARY`"}
{"level":"error","message":"An error ocurrred on register mutation: \nInvalid `this.client.cartline.create()` invocation in\nC:\\Users\\Daniel\\Documents\\tareas tec\\noveno\\ingWeb\\proyecto\\testProyect2\\src\\infrastructure\\repositories\\ShoppingCartRepository.ts:45:61\n\n  42 cartLineId = lastCartLine ? lastCartLine.cartLine_id: cartLineId;\n  43 const databaseSaleLines = await Promise.all(\n  44   selectedBatches.map(async (batch) => {\n→ 45     const databaseSaleLine = await this.client.cartline.create(\nUnique constraint failed on the constraint: `PRIMARY`"}
{"level":"error","message":"An error ocurrred on register mutation: \nInvalid `this.client.cartline.create()` invocation in\nC:\\Users\\Daniel\\Documents\\tareas tec\\noveno\\ingWeb\\proyecto\\testProyect2\\src\\infrastructure\\repositories\\ShoppingCartRepository.ts:46:61\n\n  43 const databaseSaleLines = await Promise.all(\n  44   selectedBatches.map(async (batch) => {\n  45     console.log('cartLineId => ', cartLineId)\n→ 46     const databaseSaleLine = await this.client.cartline.create(\nUnique constraint failed on the constraint: `PRIMARY`"}
{"level":"error","message":"An error ocurrred on register mutation: saleLine.setSaleLineId is not a function"}
{"level":"error","message":"An error ocurrred on login mutation: Cannot read properties of null (reading 'snapshot')"}
{"level":"error","message":"An error ocurrred on login mutation: Cannot read properties of null (reading 'snapshot')"}
{"level":"error","message":"An error ocurrred on login mutation: Cannot read properties of null (reading 'snapshot')"}
{"level":"error","message":"An error ocurrred on login mutation: Cannot read properties of null (reading 'snapshot')"}
{"level":"error","message":"An error ocurrred on login mutation: Cannot read properties of null (reading 'snapshot')"}
{"level":"error","message":"An error ocurrred on login mutation: Cannot read properties of null (reading 'snapshot')"}
{"level":"error","message":"An error ocurrred on login mutation: Cart not found for user"}
{"level":"error","message":"An error ocurrred on register mutation: Cannot read properties of undefined (reading 'actualStock')"}
{"level":"error","message":"An error ocurrred on register mutation: Cannot read properties of undefined (reading 'actualStock')"}
{"level":"error","message":"An error ocurrred on register mutation: Not enough stock for this product"}
{"level":"error","message":"An error ocurrred on createPaymentMethod mutation: Payment method already exists"}
{"level":"error","message":"An error ocurrred on authorizePayment mutation: Payment rejected"}
{"level":"error","message":"An error ocurrred on addToCart mutation: Not enough stock for this product"}
{"level":"error","message":"An error ocurrred on removeLineCart mutation: \nInvalid `this.client.cartline.delete()` invocation in\nC:\\Users\\Daniel\\Documents\\tareas tec\\noveno\\ingWeb\\proyecto\\testProyect2\\src\\infrastructure\\repositories\\ShoppingCartRepository.ts:111:63\n\n  108 }\n  109 \n  110 async removeSaleLineFromCart(cart: ShoppingCart, saleLineId: number): Promise<boolean> {\n→ 111   const databaseSaleLine = await this.client.cartline.delete(\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist."}
{"level":"error","message":"An error ocurrred on removeLineCart mutation: \nInvalid `this.client.cartline.delete()` invocation in\nC:\\Users\\Daniel\\Documents\\tareas tec\\noveno\\ingWeb\\proyecto\\testProyect2\\src\\infrastructure\\repositories\\ShoppingCartRepository.ts:111:63\n\n  108 }\n  109 \n  110 async removeSaleLineFromCart(cart: ShoppingCart, saleLineId: number): Promise<boolean> {\n→ 111   const databaseSaleLine = await this.client.cartline.delete(\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist."}
{"level":"error","message":"An error ocurrred on removeLineCart mutation: Cannot read properties of undefined (reading 'company')"}
{"level":"error","message":"An error ocurrred on removeLineCart mutation: Cannot read properties of undefined (reading 'company')"}
{"level":"error","message":"An error ocurrred on removeLineCart mutation: Cannot read properties of undefined (reading 'company')"}
{"level":"error","message":"An error ocurrred on removeLineCart mutation: Cannot read properties of undefined (reading 'company')"}
{"level":"error","message":"An error ocurrred on removeLineCart mutation: Cannot read properties of undefined (reading 'company')"}
{"level":"error","message":"An error ocurrred on removeLineCart mutation: Cannot read properties of undefined (reading 'company')"}
{"level":"error","message":"An error ocurrred on removeLineCart mutation: Cannot read properties of undefined (reading 'company')"}
{"level":"error","message":"An error ocurrred on removeLineCart mutation: Cannot read properties of undefined (reading 'company')"}
{"level":"error","message":"An error ocurrred on removeLineCart mutation: Cannot read properties of undefined (reading 'company')"}
{"level":"error","message":"An error ocurrred on startPayment mutation: \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `1064`. Message: `You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[WRITE]' at line 1`"}
{"level":"error","message":"An error ocurrred on startPayment mutation: \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `1064`. Message: `You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WRITE' at line 1`"}
{"level":"error","message":"An error ocurrred on startPayment mutation: \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `1064`. Message: `You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WRITE' at line 1`"}
{"level":"error","message":"An error ocurrred on startPayment mutation: \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `1064`. Message: `You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WRITE' at line 1`"}
{"level":"error","message":"An error ocurrred on startPayment mutation: \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `1295`. Message: `This command is not supported in the prepared statement protocol yet`"}
{"level":"error","message":"An error ocurrred on cancelStartPayment mutation: No products provided"}
{"level":"error","message":"An error ocurrred on startPayment mutation: structuredClone is not defined"}
{"level":"error","message":"An error ocurrred on startPayment mutation: structuredClone is not defined"}
{"level":"error","message":"An error ocurrred on login mutation: Wrong credentials"}
{"level":"error","message":"An error ocurrred on loginEmployee mutation: Wrong credentials"}
{"level":"error","message":"An error ocurrred on beginSortingProcess query: Cannot read properties of undefined (reading 'BeginSortingProcess')"}
{"level":"error","message":"An error ocurrred on beginSortingProcess query: Cannot read properties of undefined (reading 'BeginSortingProcess')"}
{"level":"error","message":"An error ocurrred on addToCart mutation: Not enough stock for this product"}
{"level":"error","message":"An error ocurrred on beginSortingProcess query: \nInvalid `this.client.shelf.findMany()` invocation in\nC:\\Users\\Daniel\\Documents\\tareas tec\\noveno\\ingWeb\\proyecto\\testProyect2\\src\\infrastructure\\repositories\\ShelfRepository.ts:13:50\n\n  10 }\n  11 \n  12 async getShelfsByManager(managerId: number): Promise<Shelf[] | null> {\n→ 13   let databaseShelfs = await this.client.shelf.findMany(\nError converting field \"shelfM_id\" of expected non-nullable type \"Int\", found incompatible value of \"null\"."}
{"level":"error","message":"An error ocurrred on beginSortingProcess query: Somenthing went wrong getting the role info"}
{"level":"error","message":"An error ocurrred on beginSortingProcess query: Somenthing went wrong getting the role info"}
{"level":"error","message":"An error ocurrred on beginSortingProcess query: Somenthing went wrong getting the role info"}
{"level":"error","message":"An error ocurrred on beginSortingProcess query: Somenthing went wrong getting the role info"}
{"level":"error","message":"An error ocurrred on beginSortingProcess query: Somenthing went wrong getting the role info"}
